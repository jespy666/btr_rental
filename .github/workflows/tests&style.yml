name: lint&tests

on:
  - push
  - pull_request

env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  DB: 'lite'
  REDIS_HOST: 'localhost'
  REDIS_PORT: 6379

jobs:
  test_with_redis:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
    services:
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 6379:6379
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies and apply migrations
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r req/dev.txt
          python manage.py migrate
      - name: Run linter
        run: |
          . venv/bin/activate
          flake8 --exclude=static,*migrations,venv,config
      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v3.2.0
        with:
          coverageCommand: |
            . venv/bin/activate
            coverage run manage.py test
          debug: true
